{"ast":null,"code":"var _jsxFileName = \"/Users/matthewthomas/my-app/src/features/canvastodo/canvastodo.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux'; // import styles from './canvastodo.module.css';\n\nimport { addTask, selectTask, setItem, selectListOfTask, removeTask } from './canvastodoSlice.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function CanvasTodo() {\n  _s();\n\n  const todo = useSelector(selectTask);\n  const listOfTodo = useSelector(selectListOfTask);\n  const dispatch = useDispatch();\n\n  const addtoList = () => {\n    let currentTask = {\n      task: todo,\n      id: Date.now(),\n      done: false,\n      notes: \"\"\n    };\n    dispatch(addTask({\n      todo: currentTask\n    }));\n  };\n\n  const textChange = input => {\n    // input.preventDefault();\n    dispatch(setItem({\n      item: input\n    }));\n  };\n\n  const removeTodo = item => {\n    dispatch(removeTask({\n      task: item\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Canvas ToDo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: todo,\n        onChange: event => textChange(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addtoList,\n        children: \"  add todo \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(ListOfTask, {\n          listOfTodo: listOfTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Total Number of Tasks Uncompleted: \", listOfTodo.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CanvasTodo, \"KuaZ8J8u3PMqbo/oLHA0dDzqlnE=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = CanvasTodo;\nexport function ToDoTask(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.onClick,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Comment Box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = ToDoTask;\nexport function ListOfTask(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.listOfTodo.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(ToDoTask, {\n        value: item.task,\n        onClick: () => removeTodo(item.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 38\n      }, this), \" \"]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this))\n  }, void 0, false);\n}\n_c3 = ListOfTask;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CanvasTodo\");\n$RefreshReg$(_c2, \"ToDoTask\");\n$RefreshReg$(_c3, \"ListOfTask\");","map":{"version":3,"sources":["/Users/matthewthomas/my-app/src/features/canvastodo/canvastodo.js"],"names":["useSelector","useDispatch","addTask","selectTask","setItem","selectListOfTask","removeTask","CanvasTodo","todo","listOfTodo","dispatch","addtoList","currentTask","task","id","Date","now","done","notes","textChange","input","item","removeTodo","event","target","value","length","ToDoTask","props","onClick","ListOfTask","map"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,SACEC,OADF,EAEEC,UAFF,EAGEC,OAHF,EAIEC,gBAJF,EAKEC,UALF,QAMO,sBANP;;;AAUA,OAAO,SAASC,UAAT,GAAuB;AAAA;;AAC5B,QAAMC,IAAI,GAAGR,WAAW,CAACG,UAAD,CAAxB;AACA,QAAMM,UAAU,GAAGT,WAAW,CAACK,gBAAD,CAA9B;AACA,QAAMK,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,QAAMU,SAAS,GAAG,MAAM;AACtB,QAAIC,WAAW,GAAG;AAACC,MAAAA,IAAI,EAACL,IAAN;AAAYM,MAAAA,EAAE,EAACC,IAAI,CAACC,GAAL,EAAf;AAA0BC,MAAAA,IAAI,EAAC,KAA/B;AAAqCC,MAAAA,KAAK,EAAC;AAA3C,KAAlB;AACAR,IAAAA,QAAQ,CAACR,OAAO,CAAC;AACfM,MAAAA,IAAI,EAAEI;AADS,KAAD,CAAR,CAAR;AAGD,GALD;;AAOA,QAAMO,UAAU,GAAIC,KAAD,IAAW;AAC5B;AACAV,IAAAA,QAAQ,CAACN,OAAO,CAAC;AACfiB,MAAAA,IAAI,EAAED;AADS,KAAD,CAAR,CAAR;AAGD,GALD;;AAMA,QAAME,UAAU,GAAID,IAAD,IAAU;AAC3BX,IAAAA,QAAQ,CAACJ,UAAU,CAAC;AAClBO,MAAAA,IAAI,EAAEQ;AADY,KAAD,CAAX,CAAR;AAGD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eACiC;AAAA;AAAA;AAAA;AAAA,cADjC,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEb,IAA1B;AAAgC,QAAA,QAAQ,EAAGe,KAAD,IAAWJ,UAAU,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd;AAA/D;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEd,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,oBAGmD;AAAA;AAAA;AAAA;AAAA,cAHnD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,6BACE;AAAA,+BAME,QAAC,UAAD;AAAa,UAAA,UAAU,EAAEF;AAAzB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAiBE;AAAA,6BACE;AAAA,0DACsCA,UAAU,CAACiB,MADjD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAjDenB,U;UACDP,W,EACMA,W,EACFC,W;;;KAHHM,U;AAmDhB,OAAO,SAASoB,QAAT,CAAkBC,KAAlB,EAAyB;AAE9B,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEA,KAAK,CAACH;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEG,KAAK,CAACC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD;MATeF,Q;AAWhB,OAAO,SAASG,UAAT,CAAoBF,KAApB,EAA2B;AAChC,sBACE;AAAA,cAEEA,KAAK,CAACnB,UAAN,CAAiBsB,GAAjB,CACGV,IAAD,iBAAU;AAAA,mCAAmB,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,IAAI,CAACR,IAAtB;AAA4B,QAAA,OAAO,EAAE,MAAMS,UAAU,CAACD,IAAI,CAACP,EAAN;AAArD;AAAA;AAAA;AAAA;AAAA,cAAnB;AAAA,OAASO,IAAI,CAACP,EAAd;AAAA;AAAA;AAAA;AAAA,YADZ;AAFF,mBADF;AASD;MAVegB,U","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\n// import styles from './canvastodo.module.css';\nimport { \n  addTask, \n  selectTask,\n  setItem,\n  selectListOfTask,\n  removeTask,\n} from './canvastodoSlice.js';\n\n\n\nexport function CanvasTodo () {\n  const todo = useSelector(selectTask);\n  const listOfTodo = useSelector(selectListOfTask);\n  const dispatch = useDispatch();\n\n  const addtoList = () => {\n    let currentTask = {task:todo, id:Date.now(),done:false,notes:\"\"};\n    dispatch(addTask({\n      todo: currentTask,\n    }));\n  };\n  \n  const textChange = (input) => {\n    // input.preventDefault();\n    dispatch(setItem({\n      item: input,\n    }));\n  };\n  const removeTodo = (item) => {\n    dispatch(removeTask({\n      task: item,\n    }));\n  };\n\n  return (\n    <main>\n      <div>\n        <label>Canvas ToDo List</label><br/>\n        <input type=\"text\" value={todo} onChange={(event) => textChange(event.target.value)}/>\n        <button onClick={addtoList}>  add todo </button> <br/>\n      </div>\n      <div>\n        <ul>\n        {/* {\n          listOfTodo.map(\n          (item) => \n          <li key={item.id}> <ToDoTask value={item.task} onClick={() => removeTodo(item.id)}/> </li>)\n        } */}\n          <ListOfTask  listOfTodo={listOfTodo} />\n\n        </ul>\n      </div>\n      <div>\n        <label>\n          Total Number of Tasks Uncompleted: {listOfTodo.length}\n        </label>\n      </div>\n    </main>\n  );\n}\n\nexport function ToDoTask(props) {\n  \n  return (\n    <>\n      <input type=\"text\" value={props.value}/>\n      <button onClick={props.onClick}>Done</button>\n      <button>Comment Box</button>\n    </>\n  );\n}  \n\nexport function ListOfTask(props) {\n  return (\n    <>\n    {\n      props.listOfTodo.map(\n        (item) => <li key={item.id}> <ToDoTask value={item.task} onClick={() => removeTodo(item.id)}/> </li>)\n    }\n    </>\n  );\n  \n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}
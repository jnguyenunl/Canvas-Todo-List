{"ast":null,"code":"var _jsxFileName = \"/Users/matthewthomas/git/Canvas-Todo-List/canvastodo-react-redux/src/features/canvastodo/canvastodo.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './canvastodo.module.css';\nimport React, { useState } from 'react';\nimport { addTask, selectTask, setItem, selectListOfTask, removeTask } from './canvastodoSlice.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function CanvasTodo() {\n  _s();\n\n  const todo = useSelector(selectTask);\n  const listOfToDo = useSelector(selectListOfTask);\n  const dispatch = useDispatch();\n\n  const addtoList = () => {\n    let currentTask = {\n      task: todo,\n      id: Date.now(),\n      done: false,\n      notes: \"\"\n    };\n    dispatch(addTask({\n      todo: currentTask\n    }));\n  };\n\n  const textChange = input => {\n    dispatch(setItem({\n      item: input\n    }));\n  };\n\n  const removeToDo = item => {\n    dispatch(removeTask({\n      task: item\n    }));\n  };\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  };\n\n  function TaskComment(props) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.popupbox,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.box,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.closeicon,\n            onClick: props.handleClose,\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), props.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Canvas ToDo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: todo,\n        onChange: event => textChange(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addtoList,\n        children: \"  add todo \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: listOfToDo.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(ToDoTask, {\n            value: item.task,\n            onClick: () => removeToDo(item.id),\n            onPress: () => togglePopup()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), \" \"]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Total Number of Tasks Uncompleted: \", listOfToDo.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isOpen && /*#__PURE__*/_jsxDEV(TaskComment, {\n        content: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Task \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Task Outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Save Task Commment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true),\n        handleClose: togglePopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CanvasTodo, \"gymSLqIxdBuTXxkpDwn3pUxm0Ew=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = CanvasTodo;\nexport function ToDoTask(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.onClick,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Comment\",\n      onClick: props.onPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} //how to talk to the main function if you have nested compents\n// export function ListOfTask(props) {\n//   return (\n//     <>\n//     {\n//       props.listOfTodo.map(\n//         (item) => <li key={item.id}> <ToDoTask value={item.task} onClick={() => removeTodo(item.id)}/> </li>)\n//     }\n//     </>\n//   );\n// }\n\n_c2 = ToDoTask;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CanvasTodo\");\n$RefreshReg$(_c2, \"ToDoTask\");","map":{"version":3,"sources":["/Users/matthewthomas/git/Canvas-Todo-List/canvastodo-react-redux/src/features/canvastodo/canvastodo.js"],"names":["useSelector","useDispatch","styles","React","useState","addTask","selectTask","setItem","selectListOfTask","removeTask","CanvasTodo","todo","listOfToDo","dispatch","addtoList","currentTask","task","id","Date","now","done","notes","textChange","input","item","removeToDo","isOpen","setIsOpen","togglePopup","TaskComment","props","popupbox","box","closeicon","handleClose","content","event","target","value","map","length","ToDoTask","onClick","onPress"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport styles from './canvastodo.module.css';\nimport React, { useState } from 'react';\nimport { \n  addTask, \n  selectTask,\n  setItem,\n  selectListOfTask,\n  removeTask,\n} from './canvastodoSlice.js';\n\n\n\nexport function CanvasTodo () {\n  const todo = useSelector(selectTask);\n  const listOfToDo = useSelector(selectListOfTask);\n  const dispatch = useDispatch();\n\n  const addtoList = () => {\n    let currentTask = {task:todo, id:Date.now(),done:false,notes:\"\"};\n    dispatch(addTask({\n      todo: currentTask,\n    }));\n  };\n  \n  const textChange = (input) => {\n    dispatch(setItem({\n      item: input,\n    }));\n  };\n  const removeToDo = (item) => {\n    dispatch(removeTask({\n      task: item,\n    }));\n  };\n\n  const [isOpen, setIsOpen] = useState(false);\n \n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  }\n\n  function TaskComment(props) {\n    return(\n      <>\n        <div className={styles.popupbox}>\n          <div className={styles.box}>\n            <span className={styles.closeicon} onClick={props.handleClose}>x</span>\n            {props.content}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <main>\n      <div>\n        <label>Canvas ToDo List</label><br/>\n        <input type=\"text\" value={todo} onChange={(event) => textChange(event.target.value)}/>\n        <button onClick={addtoList}>  add todo </button> <br/>\n      </div>\n      <div>\n        <ul>\n        {\n          listOfToDo.map(\n          (item) => \n          <li key={item.id}> \n          <ToDoTask value={item.task} onClick={() => removeToDo(item.id)} onPress={() => togglePopup()}/> </li>)\n        }\n          {/* <ListOfTask  listOfTodo={listOfTodo} /> */}\n        </ul>\n      </div>\n      <div>\n        <label>\n          Total Number of Tasks Uncompleted: {listOfToDo.length}\n        </label>\n      </div>\n      <div>\n        {\n          isOpen && <TaskComment\n          content={\n            <>\n              <b>Task </b>\n              <p> Task Outline</p>\n              <button>Save Task Commment</button>\n            </>\n          }\n          handleClose={togglePopup}\n          />\n        }\n    </div>\n    </main>\n  );\n}\n\n\n\nexport function ToDoTask(props) {\n\n  return (\n    <>\n      <input type=\"text\" value={props.value}/>\n      <button onClick={props.onClick}>Done</button>\n      <input type=\"button\" value=\"Comment\" onClick={props.onPress} />\n    </>\n  );\n}  \n\n//how to talk to the main function if you have nested compents\n// export function ListOfTask(props) {\n//   return (\n//     <>\n//     {\n//       props.listOfTodo.map(\n//         (item) => <li key={item.id}> <ToDoTask value={item.task} onClick={() => removeTodo(item.id)}/> </li>)\n//     }\n//     </>\n//   );\n  \n// }\n\n\n\n"]},"metadata":{},"sourceType":"module"}
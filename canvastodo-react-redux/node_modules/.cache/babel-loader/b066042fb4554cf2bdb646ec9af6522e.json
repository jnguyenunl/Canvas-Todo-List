{"ast":null,"code":"var _jsxFileName = \"/Users/matthewthomas/my-app/src/features/canvastodo/canvastodo.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addTodo, curitem, setItem } from './canvastodoSlice.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CanvasTodo() {\n  _s();\n\n  const todo = useSelector(curitem);\n  const dispatch = useDispatch();\n\n  const addtoList = () => {\n    dispatch(addTodo({\n      todo\n    }));\n  };\n\n  const textChange = input => {\n    console.log('dispatch is', dispatch, 'of type', dispatch === null || dispatch === void 0 ? void 0 : dispatch.constructor);\n    console.log('setItem is', setItem, 'of type', setItem === null || setItem === void 0 ? void 0 : setItem.constructor);\n    dispatch(setItem({\n      item: input\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Canvas todo list \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: todo,\n        onChange: event => textChange(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addtoList,\n        children: \"  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CanvasTodo, \"sYuTICH3ezxhLVQORlD7K4+KScQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CanvasTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CanvasTodo\");","map":{"version":3,"sources":["/Users/matthewthomas/my-app/src/features/canvastodo/canvastodo.js"],"names":["useSelector","useDispatch","addTodo","curitem","setItem","CanvasTodo","todo","dispatch","addtoList","textChange","input","console","log","constructor","item","event","target","value"],"mappings":";;;AACA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,OADF,EAEEC,OAFF,EAGEC,OAHF,QAIO,sBAJP;;AAMA,OAAO,SAASC,UAAT,GAAuB;AAAA;;AAE5B,QAAMC,IAAI,GAAGN,WAAW,CAACG,OAAD,CAAxB;AACA,QAAMI,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,SAAS,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CAACL,OAAO,CAAC;AACfI,MAAAA;AADe,KAAD,CAAR,CAAR;AAGD,GAJD;;AAOA,QAAMG,UAAU,GAAIC,KAAD,IAAW;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,QAA3B,EAAqC,SAArC,EAAgDA,QAAhD,aAAgDA,QAAhD,uBAAgDA,QAAQ,CAAEM,WAA1D;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BR,OAA1B,EAAmC,SAAnC,EAA8CA,OAA9C,aAA8CA,OAA9C,uBAA8CA,OAAO,CAAES,WAAvD;AACAN,IAAAA,QAAQ,CAACH,OAAO,CAAC;AACfU,MAAAA,IAAI,EAAEJ;AADS,KAAD,CAAR,CAAR;AAID,GAPD;;AAUA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEJ,IAA1B;AAAgC,QAAA,QAAQ,EAAGS,KAAD,IAAWN,UAAU,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd;AAA/D;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,OAAO,EAAET,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GApCeH,U;UAEDL,W,EACIC,W;;;KAHHI,U","sourcesContent":["\nimport { useSelector, useDispatch } from 'react-redux';\nimport { \n  addTodo, \n  curitem,\n  setItem,\n} from './canvastodoSlice.js';\n\nexport function CanvasTodo () {\n\n  const todo = useSelector(curitem);\n  const dispatch = useDispatch();\n\n  const addtoList = () => {\n    dispatch(addTodo({\n      todo,\n    }));\n  };\n  \n  \n  const textChange = (input) => {\n    console.log('dispatch is', dispatch, 'of type', dispatch?.constructor);\n    console.log('setItem is', setItem, 'of type', setItem?.constructor);\n    dispatch(setItem({\n      item: input,\n    }));\n  \n  };\n\n\n  return (\n    <main>\n      <div>\n        <label>Canvas todo list </label>\n        \n        <input type=\"text\" value={todo} onChange={(event) => textChange(event.target.value)}/>\n        <button onClick={addtoList}>  </button>\n      </div>\n      \n\n    </main>\n  );\n\n  \n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst canvastodoSlice = createSlice({\n  name: 'canvastodo',\n  initialState: {\n    todolist: [],\n    item: ''\n  },\n  reducer: {\n    addTodo: (canvastodo, action) => {\n      const {\n        todo\n      } = action.payload;\n      canvastodo.item = todo;\n      canvastodo.todolist.push(canvastodo.item);\n    }\n  },\n  setItem: (canvastodo, action) => {\n    const {\n      item\n    } = action.payload;\n    canvastodo.item = item;\n  }\n});\nexport function curitem(state) {\n  return state.canvastodo.item;\n}\nexport const {\n  addTodo,\n  setItem\n} = canvastodoSlice.actions;\nexport default canvastodoSlice;","map":{"version":3,"sources":["/Users/matthewthomas/my-app/src/features/canvastodo/canvastodoSlice.js"],"names":["createSlice","canvastodoSlice","name","initialState","todolist","item","reducer","addTodo","canvastodo","action","todo","payload","push","setItem","curitem","state","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,eAAe,GAAGD,WAAW,CAAC;AAClCE,EAAAA,IAAI,EAAE,YAD4B;AAElCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,IAAI,EAAE;AAFM,GAFoB;AAMlCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,CAACC,UAAD,EAAaC,MAAb,KAAuB;AAC9B,YAAM;AACJC,QAAAA;AADI,UAEFD,MAAM,CAACE,OAFX;AAGAH,MAAAA,UAAU,CAACH,IAAX,GAAkBK,IAAlB;AACAF,MAAAA,UAAU,CAACJ,QAAX,CAAoBQ,IAApB,CAAyBJ,UAAU,CAACH,IAApC;AACD;AAPM,GANyB;AAelCQ,EAAAA,OAAO,EAAE,CAACL,UAAD,EAAaC,MAAb,KAAuB;AAC9B,UAAM;AACJJ,MAAAA;AADI,QAEFI,MAAM,CAACE,OAFX;AAGAH,IAAAA,UAAU,CAACH,IAAX,GAAkBA,IAAlB;AACD;AApBiC,CAAD,CAAnC;AAuBA,OAAO,SAASS,OAAT,CAAiBC,KAAjB,EAAwB;AAC7B,SAAOA,KAAK,CAACP,UAAN,CAAiBH,IAAxB;AACD;AACD,OAAO,MAAM;AACXE,EAAAA,OADW;AAEXM,EAAAA;AAFW,IAGTZ,eAAe,CAACe,OAHb;AAKP,eAAef,eAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst canvastodoSlice = createSlice({\n  name: 'canvastodo',\n  initialState: {\n    todolist: [],\n    item: '',\n  },\n  reducer: {\n    addTodo: (canvastodo, action) =>{\n      const {\n        todo,\n      } = action.payload;\n      canvastodo.item = todo;\n      canvastodo.todolist.push(canvastodo.item);\n    }\n  },\n  setItem: (canvastodo, action) =>{\n    const {\n      item,\n    } = action.payload\n    canvastodo.item = item;\n  }\n});\n\nexport function curitem(state) {\n  return state.canvastodo.item;\n}\nexport const {\n  addTodo,\n  setItem,\n} = canvastodoSlice.actions;\n\nexport default canvastodoSlice;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst canvastodoSlice = createSlice({\n  name: 'canvasTodo',\n  initialState: {\n    todolist: [],\n    item: ''\n  },\n  reducers: {\n    removeTask: (canvasTodo, action) => {\n      const {\n        task\n      } = action.payload;\n      canvasTodo.todolist.filter(todo => todo.id !== task.id);\n    },\n    addTask: (canvasTodo, action) => {\n      const {\n        todo\n      } = action.payload; // let value = todo;\n\n      canvasTodo.todolist.push(todo);\n    },\n    setItem: (canvasTodo, action) => {\n      const {\n        item\n      } = action.payload;\n      canvasTodo.item = item;\n    }\n  }\n});\nexport function selectTask(state) {\n  return state.canvasTodo.item;\n}\nexport function selectListOfTask(state) {\n  return state.canvasTodo.todolist;\n}\nexport const {\n  addTask,\n  setItem,\n  removeTask\n} = canvastodoSlice.actions;\nexport default canvastodoSlice;","map":{"version":3,"sources":["/Users/matthewthomas/my-app/src/features/canvastodo/canvastodoSlice.js"],"names":["createSlice","canvastodoSlice","name","initialState","todolist","item","reducers","removeTask","canvasTodo","action","task","payload","filter","todo","id","addTask","push","setItem","selectTask","state","selectListOfTask","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,eAAe,GAAGD,WAAW,CAAC;AAClCE,EAAAA,IAAI,EAAE,YAD4B;AAElCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,IAAI,EAAE;AAFM,GAFoB;AAMlCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,UAAD,EAAaC,MAAb,KAAwB;AAClC,YAAM;AACJC,QAAAA;AADI,UAEFD,MAAM,CAACE,OAFX;AAGAH,MAAAA,UAAU,CAACJ,QAAX,CAAoBQ,MAApB,CAA4BC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,IAAI,CAACI,EAAtD;AAED,KAPO;AAQRC,IAAAA,OAAO,EAAE,CAACP,UAAD,EAAaC,MAAb,KAAwB;AAC/B,YAAM;AACJI,QAAAA;AADI,UAEFJ,MAAM,CAACE,OAFX,CAD+B,CAI/B;;AACAH,MAAAA,UAAU,CAACJ,QAAX,CAAoBY,IAApB,CAAyBH,IAAzB;AAED,KAfO;AAgBRI,IAAAA,OAAO,EAAE,CAACT,UAAD,EAAaC,MAAb,KAAwB;AAC/B,YAAM;AACJJ,QAAAA;AADI,UAEFI,MAAM,CAACE,OAFX;AAGAH,MAAAA,UAAU,CAACH,IAAX,GAAkBA,IAAlB;AACD;AArBO;AANwB,CAAD,CAAnC;AAgCA,OAAO,SAASa,UAAT,CAAoBC,KAApB,EAA2B;AAChC,SAAOA,KAAK,CAACX,UAAN,CAAiBH,IAAxB;AACD;AACD,OAAO,SAASe,gBAAT,CAA0BD,KAA1B,EAAiC;AACtC,SAAOA,KAAK,CAACX,UAAN,CAAiBJ,QAAxB;AACD;AACD,OAAO,MAAM;AACXW,EAAAA,OADW;AAEXE,EAAAA,OAFW;AAGXV,EAAAA;AAHW,IAITN,eAAe,CAACoB,OAJb;AAMP,eAAepB,eAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst canvastodoSlice = createSlice({\n  name: 'canvasTodo',\n  initialState: {\n    todolist: [],\n    item: '',\n  },\n  reducers: {\n    removeTask: (canvasTodo, action) => {\n      const {\n        task,\n      } = action.payload;\n      canvasTodo.todolist.filter((todo) => todo.id !== task.id);\n\n    },\n    addTask: (canvasTodo, action) => {\n      const {\n        todo,\n      } = action.payload;\n      // let value = todo;\n      canvasTodo.todolist.push(todo);\n      \n    },\n    setItem: (canvasTodo, action) => {\n      const {\n        item,\n      } = action.payload\n      canvasTodo.item = item;\n    },\n  },\n\n});\n\nexport function selectTask(state) {\n  return state.canvasTodo.item;\n}\nexport function selectListOfTask(state) {\n  return state.canvasTodo.todolist;\n}\nexport const {\n  addTask,\n  setItem,\n  removeTask,\n} = canvastodoSlice.actions;\n\nexport default canvastodoSlice;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst canvastodoSlice = createSlice({\n  name: 'canvasTodo',\n  initialState: {\n    todolist: [],\n    Task: ''\n  },\n  reducers: {\n    removeTask: (canvasTodo, action) => {\n      const {\n        todo\n      } = action.payload;\n      canvasTodo.todolist = canvasTodo.todolist.filter(todo => !todo);\n    },\n    addTask: (canvasTodo, action) => {\n      const {\n        todo\n      } = action.payload;\n      canvasTodo.Task = todo;\n      canvasTodo.todolist.push(canvasTodo.Task);\n    },\n    setTask: (canvasTodo, action) => {\n      const {\n        item\n      } = action.payload;\n      canvasTodo.Task = item;\n    }\n  }\n});\nexport function selectTask(state) {\n  return state.canvasTodo.Task;\n}\nexport function selectListOfTask(state) {\n  return state.canvasTodo.todolist;\n}\nexport const {\n  addTask,\n  setTask,\n  removeTask\n} = canvastodoSlice.actions;\nexport default canvastodoSlice;","map":{"version":3,"sources":["/Users/matthewthomas/my-app/src/features/canvastodo/canvastodoSlice.js"],"names":["createSlice","canvastodoSlice","name","initialState","todolist","Task","reducers","removeTask","canvasTodo","action","todo","payload","filter","addTask","push","setTask","item","selectTask","state","selectListOfTask","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,eAAe,GAAGD,WAAW,CAAC;AAClCE,EAAAA,IAAI,EAAE,YAD4B;AAElCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,IAAI,EAAE;AAFM,GAFoB;AAMlCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,UAAD,EAAaC,MAAb,KAAwB;AAClC,YAAM;AACJC,QAAAA;AADI,UAEFD,MAAM,CAACE,OAFX;AAGAH,MAAAA,UAAU,CAACJ,QAAX,GAAsBI,UAAU,CAACJ,QAAX,CAAoBQ,MAApB,CAA2BF,IAAI,IAAI,CAACA,IAApC,CAAtB;AAED,KAPO;AAQRG,IAAAA,OAAO,EAAE,CAACL,UAAD,EAAaC,MAAb,KAAwB;AAC/B,YAAM;AACJC,QAAAA;AADI,UAEFD,MAAM,CAACE,OAFX;AAGAH,MAAAA,UAAU,CAACH,IAAX,GAAkBK,IAAlB;AACAF,MAAAA,UAAU,CAACJ,QAAX,CAAoBU,IAApB,CAAyBN,UAAU,CAACH,IAApC;AACD,KAdO;AAeRU,IAAAA,OAAO,EAAE,CAACP,UAAD,EAAaC,MAAb,KAAwB;AAC/B,YAAM;AACJO,QAAAA;AADI,UAEFP,MAAM,CAACE,OAFX;AAGAH,MAAAA,UAAU,CAACH,IAAX,GAAkBW,IAAlB;AACD;AApBO;AANwB,CAAD,CAAnC;AA+BA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAChC,SAAOA,KAAK,CAACV,UAAN,CAAiBH,IAAxB;AACD;AACD,OAAO,SAASc,gBAAT,CAA0BD,KAA1B,EAAiC;AACtC,SAAOA,KAAK,CAACV,UAAN,CAAiBJ,QAAxB;AACD;AACD,OAAO,MAAM;AACXS,EAAAA,OADW;AAEXE,EAAAA,OAFW;AAGXR,EAAAA;AAHW,IAITN,eAAe,CAACmB,OAJb;AAMP,eAAenB,eAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst canvastodoSlice = createSlice({\n  name: 'canvasTodo',\n  initialState: {\n    todolist: [],\n    Task: '',\n  },\n  reducers: {\n    removeTask: (canvasTodo, action) => {\n      const {\n        todo,\n      } = action.payload;\n      canvasTodo.todolist = canvasTodo.todolist.filter(todo => !todo);\n\n    },\n    addTask: (canvasTodo, action) => {\n      const {\n        todo,\n      } = action.payload;\n      canvasTodo.Task = todo;\n      canvasTodo.todolist.push(canvasTodo.Task);\n    },\n    setTask: (canvasTodo, action) => {\n      const {\n        item,\n      } = action.payload;\n      canvasTodo.Task = item;\n    },\n  },\n\n});\n\nexport function selectTask(state) {\n  return state.canvasTodo.Task;\n}\nexport function selectListOfTask(state) {\n  return state.canvasTodo.todolist;\n}\nexport const {\n  addTask,\n  setTask,\n  removeTask,\n} = canvastodoSlice.actions;\n\nexport default canvastodoSlice;"]},"metadata":{},"sourceType":"module"}
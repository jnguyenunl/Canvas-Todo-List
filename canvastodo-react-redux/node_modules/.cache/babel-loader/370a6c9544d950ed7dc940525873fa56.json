{"ast":null,"code":"var _jsxFileName = \"/Users/matthewthomas/git/Canvas-Todo-List/canvastodo-react-redux/src/features/canvastodo/canvastodo.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './canvastodo.module.css';\nimport React, { useState } from 'react';\nimport Draggable from 'react-draggable';\nimport { addTask, selectTask, setItem, selectListOfTask, removeTask, editNotes } from './canvastodoSlice.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar taskItem = null;\nexport function CanvasTodo() {\n  _s();\n\n  const todo = useSelector(selectTask);\n  const listOfToDo = useSelector(selectListOfTask);\n  const dispatch = useDispatch();\n\n  const addtoList = () => {\n    if (todo !== '' && todo !== undefined) {\n      let currentTask = {\n        task: todo,\n        id: Date.now(),\n        done: false,\n        notes: \"\"\n      };\n      dispatch(addTask({\n        todo: currentTask\n      }));\n    }\n  };\n\n  const textChange = input => {\n    dispatch(setItem({\n      item: input\n    }));\n  };\n\n  const removeToDo = item => {\n    dispatch(removeTask({\n      task: item\n    }));\n  };\n\n  const changeNotes = (item, note) => {\n    setIsOpen(!isOpen);\n    dispatch(editNotes({\n      task: item,\n      notes: note\n    }));\n  };\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [importIsOpen, importSetIsOpen] = useState(false);\n\n  const toggleComment = item => {\n    taskItem = item;\n    setIsOpen(!isOpen);\n  };\n\n  const toggleImport = () => {\n    importSetIsOpen(!importIsOpen);\n  };\n\n  function TaskComment(props) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.popupbox,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.box,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.closeicon,\n            onClick: props.closeComment,\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), props.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  function TaskImport(props) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.popupbox,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.box,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.closeicon,\n            onClick: props.closeImport,\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), props.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: styles.red,\n        children: \"Canvas ToDo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 64\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: todo,\n        onChange: event => textChange(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addtoList,\n        children: \"  Add ToDo \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleImport(),\n        children: \"  Import \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: listOfToDo.map(item => /*#__PURE__*/_jsxDEV(Draggable, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(ToDoTask, {\n              value: item.task,\n              onClick: () => removeToDo(item.id),\n              onPress: () => toggleComment(item)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), \" \"]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Total Number of Tasks Uncompleted: \", listOfToDo.filter(item => item.done === false).length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isOpen && /*#__PURE__*/_jsxDEV(TaskComment, {\n        content: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: taskItem.task.replace(/[\\u0336]/g, '')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"txt\",\n            rows: \"4\",\n            cols: \"150\",\n            children: taskItem.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => changeNotes(taskItem.id, document.getElementById(\"txt\").value),\n            children: \"Save Task Commment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true),\n        closeComment: toggleComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: importIsOpen && /*#__PURE__*/_jsxDEV(TaskImport, {\n        content: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Canvas Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Canvas Username\",\n            id: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            id: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Import Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true),\n        closeImport: toggleImport\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CanvasTodo, \"9fDbVleaSJZLJ16y+jyEPSFN2Sc=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = CanvasTodo;\nexport function ToDoTask(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.onClick,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Comment\",\n      onClick: props.onPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} //how to talk to the main function if you have nested compents\n// export function ListOfTask(props) {\n//   return (\n//     <>\n//     {\n//       props.listOfTodo.map(\n//         (item) => <li key={item.id}> <ToDoTask value={item.task} onClick={() => removeTodo(item.id)}/> </li>)\n//     }\n//     </>\n//   );\n// }\n\n_c2 = ToDoTask;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CanvasTodo\");\n$RefreshReg$(_c2, \"ToDoTask\");","map":{"version":3,"sources":["/Users/matthewthomas/git/Canvas-Todo-List/canvastodo-react-redux/src/features/canvastodo/canvastodo.js"],"names":["useSelector","useDispatch","styles","React","useState","Draggable","addTask","selectTask","setItem","selectListOfTask","removeTask","editNotes","taskItem","CanvasTodo","todo","listOfToDo","dispatch","addtoList","undefined","currentTask","task","id","Date","now","done","notes","textChange","input","item","removeToDo","changeNotes","note","setIsOpen","isOpen","importIsOpen","importSetIsOpen","toggleComment","toggleImport","TaskComment","props","popupbox","box","closeicon","closeComment","content","TaskImport","closeImport","red","event","target","value","map","filter","length","replace","document","getElementById","ToDoTask","onClick","onPress"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport styles from './canvastodo.module.css';\nimport React, { useState } from 'react';\nimport Draggable from 'react-draggable';\n\nimport { \n  addTask, \n  selectTask,\n  setItem,\n  selectListOfTask,\n  removeTask,\n  editNotes,\n} from './canvastodoSlice.js';\n\nvar taskItem = null\n\nexport function CanvasTodo () {\n  const todo = useSelector(selectTask);\n  const listOfToDo = useSelector(selectListOfTask);\n  const dispatch = useDispatch();\n\n  const addtoList = () => {\n    if(todo !== '' && todo !== undefined){\n      let currentTask = {\n        task: todo, \n        id: Date.now(), \n        done: false, \n        notes: \"\"\n      };\n      dispatch(addTask({\n        todo: currentTask,\n      }));\n    } \n  };\n  \n  const textChange = (input) => {\n    dispatch(setItem({\n      item: input,\n    }));\n  };\n  const removeToDo = (item) => {\n    dispatch(removeTask({\n      task: item,\n    }));\n  };\n  const changeNotes = (item, note) => {\n    setIsOpen(!isOpen)\n    dispatch(editNotes({\n      task: item,\n      notes: note,\n    }));\n  };\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [importIsOpen, importSetIsOpen] = useState(false);\n  \n  const toggleComment = (item) => {\n    taskItem = item\n    setIsOpen(!isOpen);\n  }\n\n  const toggleImport = () => {\n    importSetIsOpen(!importIsOpen);\n  }\n\n  function TaskComment(props) {\n    return(\n      <>\n        <div className={styles.popupbox}>\n          <div className={styles.box}>\n            <span className={styles.closeicon} onClick={props.closeComment}>x</span>\n            {props.content}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  function TaskImport(props) {\n    return(\n      <>\n        <div className={styles.popupbox}>\n          <div className={styles.box}>\n            <span className={styles.closeicon} onClick={props.closeImport}>x</span>\n            {props.content}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <main>\n      <div>\n        <label className={styles.red} >Canvas ToDo List</label><br/>\n        <input type=\"text\" value={todo} onChange={(event) => textChange(event.target.value)}/>\n        <button onClick={addtoList}>  Add ToDo </button>\n        <button onClick={() => toggleImport()}>  Import </button> <br/>\n      </div>\n        <div>\n            <ul>\n            {\n              listOfToDo.map(\n              (item) => \n              <Draggable>\n              <li key={item.id}> \n              <ToDoTask value={item.task} onClick={() => removeToDo(item.id)} onPress={() => toggleComment(item)}/> </li>\n              </Draggable>)\n            }  \n              {/* <ListOfTask  listOfTodo={listOfTodo} /> */}\n            </ul>      \n        </div>\n      <div>  \n        <label>\n          Total Number of Tasks Uncompleted: {listOfToDo.filter(item => item.done === false).length}\n        </label>\n      </div>\n      <div>\n        {\n          isOpen && <TaskComment content={\n            <>\n              <b>{taskItem.task.replace(/[\\u0336]/g, '')}</b>\n              <br></br>\n              <textarea id=\"txt\" rows=\"4\" cols=\"150\">{taskItem.notes}</textarea>\n              <br></br>\n              <button onClick={() => changeNotes(taskItem.id, document.getElementById(\"txt\").value)}>Save Task Commment</button>\n            </>\n          }\n          closeComment={toggleComment}\n          />\n        }\n    </div>\n    <div>\n        {\n          importIsOpen && <TaskImport content={\n            <>\n              <b>Canvas Login</b>\n              <br/>\n              <input type=\"text\" placeholder=\"Canvas Username\" id=\"username\"/>\n              <br></br>\n              <input type=\"password\" placeholder=\"Password\" id=\"password\"/>\n              <br></br>\n              <button>Import Tasks</button>\n            </>\n          }\n          closeImport={toggleImport}\n          />\n        }\n    </div>\n    </main>\n  );\n}\n\nexport function ToDoTask(props) { \n  return (\n    <>\n      <input type=\"text\" value={props.value}/>\n      <button onClick={props.onClick}>Done</button>\n      <input type=\"button\" value=\"Comment\" onClick={props.onPress} />\n    </>\n  );\n}  \n\n//how to talk to the main function if you have nested compents\n// export function ListOfTask(props) {\n//   return (\n//     <>\n//     {\n//       props.listOfTodo.map(\n//         (item) => <li key={item.id}> <ToDoTask value={item.task} onClick={() => removeTodo(item.id)}/> </li>)\n//     }\n//     </>\n//   );\n  \n// }\n\n\n\n"]},"metadata":{},"sourceType":"module"}
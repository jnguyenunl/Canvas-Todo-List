{"ast":null,"code":"var _jsxFileName = \"/Users/matthewthomas/my-app/src/features/canvastodo/canvastodo.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './canvastodo.module.css';\nimport { addTask, selectTask, setItem, selectListOfTask, removeTask } from './canvastodoSlice.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class Task {\n  constructor(task, id, comment = undefined, done = false) {\n    this.task = task;\n    this.comment = comment;\n    this.done = done;\n    this.id = id;\n  }\n\n}\nexport function CanvasTodo() {\n  _s();\n\n  const currentTask = new Task();\n  const todo = useSelector(selectTask);\n  const listOfTodo = useSelector(selectListOfTask);\n  const dispatch = useDispatch();\n\n  const addtoList = () => {\n    currentTask(todo, Date.now());\n    dispatch(addTask({\n      todo\n    }));\n  };\n\n  const removeTask = task => {\n    dispatch(removeTask({\n      item: task\n    }));\n  };\n\n  const textChange = input => {\n    dispatch(setItem({\n      item: input\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Canvas ToDo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: todo,\n        onChange: event => textChange(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addtoList,\n        children: \"  add todo \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: listOfTodo.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(ToDoTask, {\n            value: item,\n            onClick: () => removeTask(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 45\n          }, this), \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 28\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Total Number of Tasks Uncompleted: \", listOfTodo.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n} // export function ListOfTask(props) {\n//   return (\n//     <>\n//     {\n//       props.listOfTodo.map(\n//         (item, index) => <li key={index}> <ToDoTask value={item} onEvent={removeTask()}/> </li>)\n//     }\n//     </>\n//   );\n// }\n\n_s(CanvasTodo, \"KuaZ8J8u3PMqbo/oLHA0dDzqlnE=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = CanvasTodo;\nexport function ToDoTask(props) {\n  // const dispatch = useDispatch();\n  // const eventHandler = (item) => {\n  //   dispatch(removeTask({\n  //       item,\n  //   }));\n  // };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.onClick,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Comment Box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = ToDoTask;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CanvasTodo\");\n$RefreshReg$(_c2, \"ToDoTask\");","map":{"version":3,"sources":["/Users/matthewthomas/my-app/src/features/canvastodo/canvastodo.js"],"names":["useSelector","useDispatch","styles","addTask","selectTask","setItem","selectListOfTask","removeTask","Task","constructor","task","id","comment","undefined","done","CanvasTodo","currentTask","todo","listOfTodo","dispatch","addtoList","Date","now","item","textChange","input","event","target","value","map","index","length","ToDoTask","props","onClick"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport styles from './canvastodo.module.css';\nimport { \n  addTask, \n  selectTask,\n  setItem,\n  selectListOfTask,\n  removeTask,\n} from './canvastodoSlice.js';\n\n\nexport class Task {\n  constructor(task, id,comment=undefined, done=false){\n      this.task = task;\n      this.comment = comment;\n      this.done = done;\n      this.id = id;\n  }\n}\nexport function CanvasTodo () {\n  const currentTask = new Task();\n  const todo = useSelector(selectTask);\n  const listOfTodo = useSelector(selectListOfTask);\n  const dispatch = useDispatch();\n\n  const addtoList = () => {\n    currentTask(todo, Date.now())\n    dispatch(addTask({\n      todo,\n    }));\n  };\n  const removeTask = (task) => {\n    dispatch(removeTask({\n      item: task,\n    }));\n  };\n  const textChange = (input) => {\n    dispatch(setItem({\n      item: input,\n    }));\n  };\n  \n  \n  return (\n    <main>\n      <div>\n        <label>Canvas ToDo List</label><br/>\n        <input type=\"text\" value={todo} onChange={(event) => textChange(event.target.value)}/>\n        <button onClick={addtoList}>  add todo </button> <br/>\n      </div>\n      <div>\n        <ul>\n        {\n          listOfTodo.map(\n          (item, index) => <li key={index}> <ToDoTask value={item} onClick={() => removeTask(index)}/> </li>)\n        }\n          {/* <ListOfTask  listOfTodo={listOfTodo} /> */}\n\n        </ul>\n      </div>\n      <div>\n        <label>\n          Total Number of Tasks Uncompleted: {listOfTodo.length}\n        </label>\n      </div>\n    </main>\n  );\n}\n\n// export function ListOfTask(props) {\n//   return (\n//     <>\n//     {\n//       props.listOfTodo.map(\n//         (item, index) => <li key={index}> <ToDoTask value={item} onEvent={removeTask()}/> </li>)\n//     }\n//     </>\n//   );\n  \n// }\n\nexport function ToDoTask(props) {\n  // const dispatch = useDispatch();\n  // const eventHandler = (item) => {\n  //   dispatch(removeTask({\n  //       item,\n  //   }));\n  // };\n\n  return (\n    <>\n      <input type=\"text\" value={props.value}/>\n      <button onClick={props.onClick}>Done</button>\n      <button>Comment Box</button>\n    </>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}